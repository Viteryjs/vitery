(self.webpackChunk_vitery_vitery=self.webpackChunk_vitery_vitery||[]).push([[923],{1923:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>i}),s(1536);var r=s(1527);function t(e){const n=Object.assign({p:"p",a:"a",img:"img",h1:"h1",h2:"h2",pre:"pre",code:"code",em:"em",h3:"h3",h4:"h4",h5:"h5"},e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@rollup/pluginutils",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/npm/v/@rollup/pluginutils",alt:"npm"})}),"\n",(0,r.jsx)(n.a,{href:"https://packagephobia.now.sh/result?p=@rollup/pluginutils",children:(0,r.jsx)(n.img,{src:"https://packagephobia.now.sh/badge?p=@rollup/pluginutils",alt:"size"})}),"\n",(0,r.jsx)(n.a,{href:"https://liberamanifesto.com",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/libera-manifesto-lightgrey.svg",alt:"libera manifesto"})})]}),"\n",(0,r.jsx)(n.h1,{children:"@rollup/pluginutils"}),"\n",(0,r.jsx)(n.p,{children:"A set of utility functions commonly used by 🍣 Rollup plugins."}),"\n",(0,r.jsx)(n.h2,{children:"Requirements"}),"\n",(0,r.jsxs)(n.p,{children:["This plugin requires an ",(0,r.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"LTS"})," Node version (v8.0.0+) and Rollup v1.20.0+."]}),"\n",(0,r.jsx)(n.h2,{children:"Install"}),"\n",(0,r.jsx)(n.p,{children:"Using npm:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"npm install @rollup/pluginutils --save-dev\n"})}),"\n",(0,r.jsx)(n.h2,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import utils from '@rollup/pluginutils';\n//...\n"})}),"\n",(0,r.jsx)(n.h2,{children:"API"}),"\n",(0,r.jsx)(n.p,{children:"Available utility functions are listed below:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Note: Parameter names immediately followed by a ",(0,r.jsx)(n.code,{children:"?"})," indicate that the parameter is optional."]})}),"\n",(0,r.jsx)(n.h3,{children:"addExtension"}),"\n",(0,r.jsx)(n.p,{children:"Adds an extension to a module ID if one does not exist."}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(filename: String, ext?: String)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"String"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { addExtension } from '@rollup/pluginutils';\n\nexport default function myPlugin(options = {}) {\n  return {\n    resolveId(code, id) {\n      // only adds an extension if there isn't one already\n      id = addExtension(id); // `foo` -> `foo.js`, `foo.js` -> `foo.js`\n      id = addExtension(id, '.myext'); // `foo` -> `foo.myext`, `foo.js` -> `foo.js`\n    }\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{children:"attachScopes"}),"\n",(0,r.jsxs)(n.p,{children:["Attaches ",(0,r.jsx)(n.code,{children:"Scope"})," objects to the relevant nodes of an AST. Each ",(0,r.jsx)(n.code,{children:"Scope"})," object has a ",(0,r.jsx)(n.code,{children:"scope.contains(name)"})," method that returns ",(0,r.jsx)(n.code,{children:"true"})," if a given name is defined in the current scope or a parent scope."]}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(ast: Node, propertyName?: String)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"Object"})]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://github.com/rollup/rollup-plugin-inject",children:"rollup-plugin-inject"})," or ",(0,r.jsx)(n.a,{href:"https://github.com/rollup/rollup-plugin-commonjs",children:"rollup-plugin-commonjs"})," for an example of usage."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { attachScopes } from '@rollup/pluginutils';\nimport { walk } from 'estree-walker';\n\nexport default function myPlugin(options = {}) {\n  return {\n    transform(code) {\n      const ast = this.parse(code);\n\n      let scope = attachScopes(ast, 'scope');\n\n      walk(ast, {\n        enter(node) {\n          if (node.scope) scope = node.scope;\n\n          if (!scope.contains('foo')) {\n            // `foo` is not defined, so if we encounter it,\n            // we assume it's a global\n          }\n        },\n        leave(node) {\n          if (node.scope) scope = scope.parent;\n        }\n      });\n    }\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{children:"createFilter"}),"\n",(0,r.jsx)(n.p,{children:"Constructs a filter function which can be used to determine whether or not certain modules should be operated upon."}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(include?: <picomatch>, exclude?: <picomatch>, options?: Object)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"String"})]}),"\n",(0,r.jsxs)(n.h4,{children:[(0,r.jsx)(n.code,{children:"include"})," and ",(0,r.jsx)(n.code,{children:"exclude"})]}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"String | RegExp | Array[...String|RegExp]"})]}),"\n",(0,r.jsxs)(n.p,{children:["A valid ",(0,r.jsx)(n.a,{href:"https://github.com/micromatch/picomatch#globbing-features",children:(0,r.jsx)(n.code,{children:"picomatch"})})," pattern, or array of patterns. If ",(0,r.jsx)(n.code,{children:"options.include"})," is omitted or has zero length, filter will return ",(0,r.jsx)(n.code,{children:"true"})," by default. Otherwise, an ID must match one or more of the ",(0,r.jsx)(n.code,{children:"picomatch"})," patterns, and must not match any of the ",(0,r.jsx)(n.code,{children:"options.exclude"})," patterns."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that ",(0,r.jsx)(n.code,{children:"picomatch"})," patterns are very similar to ",(0,r.jsx)(n.a,{href:"https://github.com/isaacs/minimatch#readme",children:(0,r.jsx)(n.code,{children:"minimatch"})})," patterns, and in most use cases, they are interchangeable. If you have more specific pattern matching needs, you can view ",(0,r.jsx)(n.a,{href:"https://github.com/micromatch/picomatch#library-comparisons",children:"this comparison table"})," to learn more about where the libraries differ."]}),"\n",(0,r.jsx)(n.h4,{children:(0,r.jsx)(n.code,{children:"options"})}),"\n",(0,r.jsx)(n.h5,{children:(0,r.jsx)(n.code,{children:"resolve"})}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"String | Boolean | null"})]}),"\n",(0,r.jsxs)(n.p,{children:["Optionally resolves the patterns against a directory other than ",(0,r.jsx)(n.code,{children:"process.cwd()"}),". If a ",(0,r.jsx)(n.code,{children:"String"})," is specified, then the value will be used as the base directory. Relative paths will be resolved against ",(0,r.jsx)(n.code,{children:"process.cwd()"})," first. If ",(0,r.jsx)(n.code,{children:"false"}),", then the patterns will not be resolved against any directory. This can be useful if you want to create a filter for virtual module names."]}),"\n",(0,r.jsx)(n.h4,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { createFilter } from '@rollup/pluginutils';\n\nexport default function myPlugin(options = {}) {\n  // assume that the myPlugin accepts options of `options.include` and `options.exclude`\n  var filter = createFilter(options.include, options.exclude, {\n    resolve: '/my/base/dir'\n  });\n\n  return {\n    transform(code, id) {\n      if (!filter(id)) return;\n\n      // proceed with the transformation...\n    }\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{children:"dataToEsm"}),"\n",(0,r.jsx)(n.p,{children:"Transforms objects into tree-shakable ES Module imports."}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(data: Object)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"String"})]}),"\n",(0,r.jsx)(n.h4,{children:(0,r.jsx)(n.code,{children:"data"})}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"Object"})]}),"\n",(0,r.jsx)(n.p,{children:"An object to transform into an ES module."}),"\n",(0,r.jsx)(n.h4,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { dataToEsm } from '@rollup/pluginutils';\n\nconst esModuleSource = dataToEsm(\n  {\n    custom: 'data',\n    to: ['treeshake']\n  },\n  {\n    compact: false,\n    indent: '\\t',\n    preferConst: false,\n    objectShorthand: false,\n    namedExports: true\n  }\n);\n/*\nOutputs the string ES module source:\n  export const custom = 'data';\n  export const to = ['treeshake'];\n  export default { custom, to };\n*/\n"})}),"\n",(0,r.jsx)(n.h3,{children:"extractAssignedNames"}),"\n",(0,r.jsx)(n.p,{children:"Extracts the names of all assignment targets based upon specified patterns."}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(param: Node)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"Array[...String]"})]}),"\n",(0,r.jsx)(n.h4,{children:(0,r.jsx)(n.code,{children:"param"})}),"\n",(0,r.jsxs)(n.p,{children:["Type: ",(0,r.jsx)(n.code,{children:"Node"})]}),"\n",(0,r.jsxs)(n.p,{children:["An ",(0,r.jsx)(n.code,{children:"acorn"})," AST Node."]}),"\n",(0,r.jsx)(n.h4,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { extractAssignedNames } from '@rollup/pluginutils';\nimport { walk } from 'estree-walker';\n\nexport default function myPlugin(options = {}) {\n  return {\n    transform(code) {\n      const ast = this.parse(code);\n\n      walk(ast, {\n        enter(node) {\n          if (node.type === 'VariableDeclarator') {\n            const declaredNames = extractAssignedNames(node.id);\n            // do something with the declared names\n            // e.g. for `const {x, y: z} = ...` => declaredNames = ['x', 'z']\n          }\n        }\n      });\n    }\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{children:"makeLegalIdentifier"}),"\n",(0,r.jsxs)(n.p,{children:["Constructs a bundle-safe identifier from a ",(0,r.jsx)(n.code,{children:"String"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(str: String)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"String"})]}),"\n",(0,r.jsx)(n.h4,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { makeLegalIdentifier } from '@rollup/pluginutils';\n\nmakeLegalIdentifier('foo-bar'); // 'foo_bar'\nmakeLegalIdentifier('typeof'); // '_typeof'\n"})}),"\n",(0,r.jsx)(n.h3,{children:"normalizePath"}),"\n",(0,r.jsx)(n.p,{children:"Converts path separators to forward slash."}),"\n",(0,r.jsxs)(n.p,{children:["Parameters: ",(0,r.jsx)(n.code,{children:"(filename: String)"}),"\nReturns: ",(0,r.jsx)(n.code,{children:"String"})]}),"\n",(0,r.jsx)(n.h4,{children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { normalizePath } from '@rollup/pluginutils';\n\nnormalizePath('foo\\\\bar'); // 'foo/bar'\nnormalizePath('foo/bar'); // 'foo/bar'\n"})}),"\n",(0,r.jsx)(n.h2,{children:"Meta"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/.github/CONTRIBUTING.md",children:"CONTRIBUTING"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/LICENSE",children:"LICENSE (MIT)"})})]})}const i=function(e={}){const{wrapper:n}=e.components||{};return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}},93:(e,n,s)=>{"use strict";var r=s(6255),t=s(827),i=s(1972),o=s(7811),a=s(3296),c=s(9403),l=s(3526),d=s(167),h=s(5266),p=Object.assign,u=Object.defineProperty,m=t([].concat);e.exports=!p||o((function(){if(r&&1!==p({b:1},p(u({},"a",{enumerable:!0,get:function(){u(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},n={},s=Symbol(),t="abcdefghijklmnopqrst";return e[s]=7,t.split("").forEach((function(e){n[e]=e})),7!=p({},e)[s]||a(p({},n)).join("")!=t}))?function(e,n){for(var s=d(e),t=arguments.length,o=1,p=c.f,u=l.f;t>o;)for(var j,x=h(arguments[o++]),f=p?m(a(x),p(x)):a(x),g=f.length,b=0;g>b;)j=f[b++],r&&!i(u,x,j)||(s[j]=x[j]);return s}:p},1536:(e,n,s)=>{var r=s(5154),t=s(93);r({target:"Object",stat:!0,arity:2,forced:Object.assign!==t},{assign:t})}}]);